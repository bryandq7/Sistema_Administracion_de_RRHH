@model Sistema_Planilla_CE.EmpleadoCE

@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_MyLayout.cshtml";
}

<h2>Editar</h2>

<form id="frmEmpleado" action="@Url.Action("Editar", "Empleado")" method="post">

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmpleadoCE</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id_Empleado)
        @Html.HiddenFor(model => model.Id_Contrato)
        @Html.HiddenFor(model => model.SalarioBruto_Contrato)

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_Empleado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Empleado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_Empleado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FKId_Persona_Empleado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FKId_Persona_Empleado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FKId_Persona_Empleado, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FKId_Departamento_Empleado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FKId_Departamento_Empleado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FKId_Departamento_Empleado, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <label class="control-label col-md-2">Departamento</label>
            <div class="col-md-10">
                <select class="form-control" id="Id_Departamento" name="Id_Departamento">
                    <option value="">Seleccione...</option>
                </select>
                @Html.ValidationMessageFor(model => model.Id_Departamento, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <label class="control-label col-md-2">Estado de Empleado</label>
                <div class="col-md-10">
                    <select class="form-control" id="Id_StatusEmpleado" name="Id_StatusEmpleado">
                        <option value="">Seleccione...</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.Id_StatusEmpleado, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Nombre_Departamento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre_Departamento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre_Departamento, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_Persona, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Persona, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_Persona, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <label class="control-label col-md-2">Nombre Completo</label>
            <div class="col-md-10">
                <input type="text" class="form-control" name="NombreCompletoPersona"
                       value="@Model.NombreCompletoPersona" placeholder="Ingrese Número de Identidad" disabled />
                @*@Html.EditorFor(model => model.NombreCompletoPersona, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.NombreCompletoPersona, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (@Model.SinGoceSalarial_Empleado == true)
        {
            <div class="form-group">
                <label class="control-label col-md-2"> Permiso Goce Salarial</label>
                <div class="col-md-10">
                    <div class="checkbox">
                        <input type="checkbox" id="SinGoceSalarial_Empleado" name="SinGoceSalarial_Empleado" value="true" checked>
                        @*@Html.ValidationMessageFor(model => model.SinGoceSalarial_Empleado, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>

        }
        else

        {
            <div class="form-group">
                <label class="control-label col-md-2"> Permiso Sin Goce Salarial</label>
                <div class="col-md-10">
                    <div class="checkbox">
                        <input type="checkbox" id="SinGoceSalarial_Empleado" name="SinGoceSalarial_Empleado" value="true">
                        @*@Html.ValidationMessageFor(model => model.SinGoceSalarial_Empleado, "", new { @class = "text-danger" })*@
                    </div>
                </div>
            </div>

        }



        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Usuario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_Usuario, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.SalarioBruto_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SalarioBruto_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalarioBruto_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FKId_TipoContrato_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FKId_TipoContrato_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FKId_TipoContrato_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FKId_Empleado_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FKId_Empleado_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FKId_Empleado_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FKId_Cargo_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FKId_Cargo_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FKId_Cargo_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FechaInicio_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaInicio_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaInicio_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.FechaFin_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaFin_Contrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FechaFin_Contrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Activo_Contrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo_Contrato)
                        @Html.ValidationMessageFor(model => model.Activo_Contrato, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_TipoContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_TipoContrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_TipoContrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Detalle_TipoContrato, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Detalle_TipoContrato, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Detalle_TipoContrato, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Id_Cargo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Id_Cargo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Id_Cargo, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Nombre_Cargo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre_Cargo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre_Cargo, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        //ListarDepartamentos();
        //ListarStatusEmpleados();

        ListarDepartamentos(function (result) {
            //jQuery.ajaxSetup({ async: false });

            $("#Id_Departamento").val(@Model.Id_Departamento);

            //jQuery.ajaxSetup({ async: false });
        });

        @*ListarStatusEmpleados(function (result) {
            //jQuery.ajaxSetup({ async: false });

            $("#Id_StatusEmpleado").val(@Model.Id_StatusEmpleado);

            //jQuery.ajaxSetup({ async: false });
        });*@



        //$("#Id_Provincia").on("change", function () {

        //    GetCantones($(this).val());
        //});


        function ListarDepartamentos(myCallback) {
            $.ajax({
                type: "GET",
                url: '/departamento/listardepartamentos2',
                dataType: "json",
                success: function (result) {
                    $.each(result.data, function (key, item) {
                        $("#Id_Departamento").append('<option value=' + item.Id_Departamento + '>' + item.Nombre_Departamento + '</option>');
                    });

                    if (myCallback !== undefined)
                        return myCallback(result.data);
                },
                error: function (data) {
                    alert('error');
                }
            });
        }

        //function ListarStatusEmpleados(myCallback) {
        //    $.ajax({
        //        type: "GET",
        //        url: '/statusempleado/ListarStatusEmpleados',
        //        dataType: "json",
        //        success: function (result) {
        //            $.each(result.data, function (key, item) {
        //                $("#Id_StatusEmpleado").append('<option value=' + item.Id_StatusEmpleado + '>' + item.Nombre_StatusEmpleado + '</option>');
        //            });

        //            if (myCallback !== undefined)
        //                return myCallback(result.data);
        //        },
        //        error: function (data) {
        //            alert('error');
        //        }
        //    });
        //}


        $("#frmEmpleado").submit(function (event) {
            event.preventDefault(); //prevent default action
            var dptoId = $("#Id_Departamento").val();
            if (dptoId == "") {
                alert("Debe escoger un Departamento");
                return;
            }
            var post_url = $(this).attr("action"); //get form action url
            var request_method = $(this).attr("method"); //get form GET/POST method
            var form_data = $(this).serializeArray(); //Encode form elements for submission
            console.log(form_data);

            LoadingOverlayShow("#frmEmpleado");
            $.ajax({
                url: post_url,
                type: request_method,
                data: form_data
            }).done(function (response) { //
                console.log(response);
                LoadingOverlayHide("#frmEmpleado");
                if (response.ok) {
                    alert("Empleado editado correctamente.");
                    window.location = response.toRedirect;
                }
                else {
                    alert(response.msg);
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                LoadingOverlayHide("#frmEmpleado");
            });
        });

    </script>
}
